.clear() {
    &::after {
        display: block;
        clear: both;
        content: "";
    }
}


.set-relative {
    display: block;
    position: relative;
}

.set-absolute {
    position: absolute;
}

.set-flex {
    display: flex;
}

.px2rem(@attr: width; @size: 16) {
    .get-values(length(@size));
    .get-values(@s, @i: 1) when (@i =< length(@size)) {
        @current_value: extract(@size, @i);

        & when not(@current_value = 0) {
                @{attr}+_: unit( @current_value / 16, rem );
        }

        & when (@current_value = 0) {
                @{attr}+_: 0;
        }

        .get-values(@s, @i + 1);
    }
}

.rem2px(@attr: width; @size: 16) {
    .get-values(length(@size));
    .get-values(@s, @i: 1) when (@i =< length(@size)) {
        @current_value: extract(@size, @i);

        & when not(@current_value = 0) {
                @{attr}+_: unit( 16 * @current_value, px );
        }

        & when (@current_value = 0) {
                @{attr}+_: 0;
        }

        .get-values(@s, @i + 1);
    }
}

.pt2px(@attr: width; @size: 16) {
    .get-values(length(@size));
    .get-values(@s, @i: 1) when (@i =< length(@size)) {
        @current_value: extract(@size, @i);

        & when not(@current_value = 0) {
                @{attr}+_: unit( round(@current_value * 1.333333) , px );
        }

        & when (@current_value = 0) {
                @{attr}+_: 0;
        }

        .get-values(@s, @i + 1);
    }
}

.px2pt(@attr: width; @size: 16) {
    .get-values(length(@size));
    .get-values(@s, @i: 1) when (@i =< length(@size)) {
        @current_value: extract(@size, @i);

        & when not(@current_value = 0) {
                @{attr}+_: unit( round(.75 * @current_value), pt );
        }

        & when (@current_value = 0) {
                @{attr}+_: 0;
        }

        .get-values(@s, @i + 1);
    }
}

.pt2rem(@attr: width; @size: 16){
    .get-values(length(@size));
    .get-values(@s, @i: 1) when (@i =< length(@size)) {
        @current_value: extract(@size, @i);

        & when not(@current_value = 0) {
                @{attr}+_: unit( round(@current_value * 1.333333 / 16), rem );
        }

        & when (@current_value = 0) {
                @{attr}+_: 0;
        }

        .get-values(@s, @i + 1);
    }
}

.rem2pt(@attr: width; @size: 16){
    .get-values(length(@size));
    .get-values(@s, @i: 1) when (@i =< length(@size)) {
        @current_value: extract(@size, @i);

        & when not(@current_value = 0) {
                @{attr}+_: unit( round(.75 * 16 * @current_value), pt );
        }

        & when (@current_value = 0) {
                @{attr}+_: 0;
        }

        .get-values(@s, @i + 1);
    }
}