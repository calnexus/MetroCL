@import (once) "include/vars";
@import (once) "include/mixins";

form {
    display: block;
    position: relative;
}

input[type=text],
input[type=password],
input[type=tel],
input[type=datetime-local],
input[type=email],
input[type=file],
input[type=month],
input[type=number],
input[type=search],
input[type=time],
input[type=url],
input[type=week],
input[type=file],
select, textarea, .file, .input, .textarea, .select {
    appearance: none;
    position: relative;
    border: 1px @inputBorder solid;
    color: @dark;
    width: 100%;
    display: block;
    padding: .5rem .75rem;
    font-size: 1rem;
    line-height: 1.25;
    background: @white none;
    background-clip: padding-box;
    transition: @transition-base;

    &:focus {
        outline: none;
    }

    &:hover {
        border-color: darken(@inputBorder, 10%);
    }

    &:focus, &.focused {
        box-shadow: 0 0 0 3px rgba(red(@lightGray), green(@lightGray), blue(@lightGray), 0.45);
    }

    &:disabled, &.disabled {
        pointer-events: none;
        border-color: darken(@light, 5%);
        background-color: @disabledBackground;
    }
}

input[type=button], input[type=submit], input[type=reset] {
    width: auto;
}

label {
    margin-bottom: .5rem;
}

.form-group {
    display: block;
    position: relative;
}

.form-group + .form-group {
    margin-top: 1rem;
}

// Checkbox, radio and swith

.checkbox, .radio, .switch {
    display: inline-block;
    position: relative;
    margin: 0;
    transition: @transition-base;
    user-select: none;
    cursor: pointer;

    input {
        position: absolute;
        opacity: 0;
        width: 0.0625rem;
        height: 0.0625rem;
    }

    .check, .caption {
        display: inline-block;
        vertical-align: middle;
        .px2rem(line-height, 18px);
        .px2rem(font-size, 14px);
    }

    &.disabled {
        pointer-events: none;
    }
}

.checkbox, .radio {

    display: inline-flex;

    .check {
        display: inline-block;
        .square(1, rem);
        border: 2px rgba(0, 0, 0, 0.26) solid;
        border-radius: 0;
        position: relative;
        z-index: 2;
        box-sizing: content-box;
        color: @white;
        background-color: @transparent;
    }

    .check {
        transition: @transition-base;
        &::after {
            transition: @transition-base;
        }
    }

    &.disabled ~ .check, input:disabled ~ .check {
        border-color: @disabledBorder;
        background-color: @transparent;
    }

    &.disabled ~ input:checked, input:disabled:checked {
        &  ~ .check {
            background-color: @disabledBackground;
            border-color: @light;

            &:before {
                border-color: @white;
            }
        }

        & ~ .caption {
            color: @disabledColor;
        }
    }

    input:checked ~ .check {
        background-color: @white;
        border-color: @checkBackground;

        &:before {
            display: block;
        }
    }

    .check + .caption {
        .px2rem(margin-left, 5px);
        margin-right: .5rem;
    }

    .caption + .check {
        .px2rem(margin-left, 5px);
        margin-right: .5rem;
    }


    input:focus ~ .check {
        box-shadow: 0 0 0 3px rgba(red(@lightGray), green(@lightGray), blue(@lightGray), 0.45);
    }

    &.disabled {
        .check {
            &:after {
                background-color: @disabledBackground;
            }
        }
    }

    input:disabled {
        & ~ .check {
            &:after {
                background-color: @disabledBackground;
            }
        }
    }

    &:focus, &:active {
        input:not(:disabled) {
            & ~ .check {
                .halo();
            }
        }
    }
}

.checkbox {
    .check {
        &:before {
            position: absolute;
            vertical-align: middle;
            color: transparent;
            font-size: 0;
            content: "";
            .px2rem(height, 6px);
            .px2rem(width, 10px);
            background-color: @transparent;
            border-left: 2px solid;
            border-bottom: 2px solid;
            border-color: @dark;
            left: 50%;
            top: 50%;
            .px2rem(margin-left, -5px);
            .px2rem(margin-top, -5px);
            display: block;
            transform: rotate(-45deg);
        }
    }

    input:not(:checked) {
        & ~ .check {
            &:before {
                display: none;
            }
        }
    }
}

.radio {
    .check {
        background-color: transparent !important;
        border-radius: 50%;
        &:before {
            display: none;
            content: "";
            color: @checkBackground;
            background-color: @dark;
            .circle(.75, rem);
            .px2rem(margin-left, 2px);
            .px2rem(margin-top, 2px);
        }
    }

    input:checked ~ .check {
        &:before {
            display: block;
        }
    }

    input:disabled:checked {
        & ~ .check {
            &:before {
                color: @disabledColor;
                background-color: @disabledBackground;
            }
        }
    }
}

.switch {
    .caption {
        margin: 0 5px;
    }

    .check {
        position: relative;
        height: 1.125rem;
        width: 2.8125rem;
        outline: 2px #a6a6a6 solid;
        border: 1px #fff solid;
        cursor: pointer;
        background: #A6A6A6;
        z-index: 1;
        display: inline-block;
        vertical-align: middle;
    }

    .check:after {
        position: absolute;
        left: 0;
        top: -1px;
        display: block;
        content: "";
        height: 1.125rem;
        width: .5625rem;
        outline: 2px #333 solid;
        border: 1px #333 solid;
        cursor: pointer;
        background: #333;
        z-index: 2;
        transition: @transition-base;
    }

    input[type="checkbox"]:focus ~ .check {
        outline: 1px @lightGray dotted ;
    }

    input[type="checkbox"]:checked ~ .check {
        background: #008287;
        &:after {
            left: auto;
            transform: translateX(2.25rem);
            transition: @transition-base;
        }
    }

    input[type="checkbox"]:disabled ~ .check {
        background-color: @disabledBackground;
        border-color: @white;
        outline-color: @light;
        &:after {
            background-color: darken(@disabledBackground, 10%);
            outline-color: @disabledBackground;
            border-color: @disabledBackground;
        }
    }
}

.file {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0;
    padding: 0 0 0 .5rem;

    input[type=file] {
        position: absolute;
        opacity: 0;
        width: 0.0625rem;
        height: 0.0625rem;
    }

    .caption {
        .px2rem(line-height, 35px);
        display: block;
        order: 1;
    }

    button {
        order: 2;
    }

    &.disabled {
        button {
            background-color: @light;
            color: darken(@light, 10%);
        }
    }
}

.input {
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding: 0;

    &:hover {
        input {
            border-color: transparent;
        }
    }

    &.focused {
        box-shadow: 0 0 0 3px rgba(red(@lightGray), green(@lightGray), blue(@lightGray), 0.45);
    }

    input {
        border: none!important;
        order: 1;
        &:focus {
            box-shadow: none;
        }
        &::-ms-clear {
            display: none;
        }
        &::-ms-reveal {
            display: none;
        }
    }

    .button-group {
        display: flex;
        flex-wrap: nowrap;
        order: 2;

        .button {
            background-color: transparent;
            &:focus {
                box-shadow: none;
            }
            &:hover {
                background-color: @light;
                text-shadow: rgba(0,0,0,.25) 0.1em 0.1em 0.2em;
            }
        }
    }
    &.disabled .button-group {
        button {
            background-color: @light;
            color: darken(@light, 10%);
        }
    }
}

.textarea {
    padding: 0;
    position: relative;

    textarea {
        min-height: 4rem;
        overflow-y: hidden;
        resize: none;
        border: none!important;
        &:focus {
            box-shadow: none;
        }
    }

    .clear-button {
        position: absolute;
        top: .25rem;
        right: .25rem;
        z-index: 2;
        background-color: transparent;
        &:hover {
            background-color: @light;
            text-shadow: rgba(0,0,0,.25) 0.1em 0.1em 0.2em;
        }
    }

    &.disabled {
        .clear-button {
            display: none;
        }
    }
}

.select {
    display: block;
    padding: 0;
    cursor: pointer;

    select {
        position: absolute;
        opacity: 0;
        width: 0.0625rem;
        height: 0.0625rem;
        display: none;
    }

    input {
        cursor: pointer;
        width: ~"calc(100% - .75rem)";
        border: none!important;
        &:focus {
            box-shadow: none;
        }
    }

    &:hover {
        input {
            border-color: transparent;
        }
    }

    .d-menu {
        width: 100%;
        overflow-y: auto;
    }

    &.focused {
        box-shadow: 0 0 0 3px rgba(red(@lightGray), green(@lightGray), blue(@lightGray), 0.45);
    }

    &.dropdown-toggle {
        &:before {
            margin-left: -1.25rem;
        }
    }

    &.disabled {
        &.dropdown-toggle {
            &:before {
                margin-left: -1.25rem;
                border-color: @white;
            }
        }
    }
}

.inline-form {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    justify-content: flex-start;

    input[type=text],
    input[type=password],
    input[type=tel],
    input[type=datetime-local],
    input[type=email],
    input[type=file],
    input[type=month],
    input[type=number],
    input[type=search],
    input[type=time],
    input[type=url],
    input[type=week],
    input[type=file],
    select, textarea, .file, .input, .textarea, .select {
        width: auto;
        margin-left: .5rem;
        margin-right: .5rem;
    }
}

form, fieldset, .form-group {
    &:disabled, &.disabled {
        pointer-events: none;
    }
}

.file, .input, .textarea, .select {
    &:disabled, &.disabled {
        input, textarea, select {
            background: transparent;
            color: @white;
        }

        .button-group {
            display: none;
        }
    }
}

.invalid_feedback {
    font-size: .9em;
    color: @red;
}

.custom-validation {
    input[required],
    select[required],
    textarea[required] {
        &:valid {
            border-color: @green;
        }

        &:valid + .invalid_feedback {
            display: none;
        }

        &:invalid {
            border-color: @red;
        }

        &:invalid + .invalid_feedback {
            display: block;
        }
    }
}

.required {
    border: 1px @cyan dashed !important;
    &:focus, &.focused {
        box-shadow: 0 0 0 3px rgba(red(@cyan), green(@cyan), blue(@cyan), 0.45)!important;
    }
}

.invalid {
    border: 1px @red solid !important;
    &:focus, &.focused {
        box-shadow: 0 0 0 3px rgba(red(@red), green(@red), blue(@red), 0.45)!important;
    }
}

.valid {
    border: 1px @green solid !important;
    &:focus, &.focused {
        box-shadow: 0 0 0 3px rgba(red(@green), green(@green), blue(@green), 0.45)!important;
    }
}


form[data-role*=validator] {
    .invalid_feedback {
        display: none;
    }
}

.invalid + .invalid_feedback,
.invalid > .invalid_feedback {
    display: block !important;
}
