@import (once) "include/vars";
@import (once) "include/mixins";

// Checkbox, radio and swith

.checkbox, .radio, .switch {
    display: inline-block;
    position: relative;
    margin: 0;
    transition: @transition-base;
    user-select: none;
    cursor: pointer;

    input {
        position: absolute;
        opacity: 0;
        width: 0.0625rem;
        height: 0.0625rem;
    }

    .check, .caption {
        display: inline-block;
        vertical-align: middle;
        .px2rem(line-height, 18px);
        .px2rem(font-size, 14px);
    }

    &.disabled {
        pointer-events: none;
    }
}

.checkbox, .radio {

    display: inline-flex;

    .check {
        display: inline-block;
        .square(1, rem);
        border: 2px rgba(0, 0, 0, 0.26) solid;
        border-radius: 0;
        position: relative;
        z-index: 2;
        box-sizing: content-box;
        color: @white;
        background-color: @transparent;
    }

    .check {
        transition: @transition-base;
        &::after, &::before {
            transition: @transition-base;
        }
    }

    &.disabled ~ .check, input:disabled ~ .check {
        border-color: @disabledBorder;
        background-color: @transparent;
    }

    &.disabled ~ input:checked, input:disabled:checked {
        &  ~ .check {
            background-color: @disabledBackground;
            border-color: @light;

            &:before {
                border-color: @white;
            }
        }

        & ~ .caption {
            color: @disabledColor;
        }
    }

    input:checked ~ .check {
        background-color: @white;
        border-color: @checkBackground;

        &::before {
            transition: @transition-base;
            display: block;
        }
    }

    .check ~ .caption {
        .px2rem(margin-left, 5px);
        margin-right: .5rem;
    }

    .caption ~ .check {
        .px2rem(margin-left, 5px);
        margin-right: .5rem;
    }


    input:focus ~ .check {
        box-shadow: 0 0 0 3px rgba(red(@lightGray), green(@lightGray), blue(@lightGray), 0.45);
    }

    &.disabled {
        .check {
            &::after {
                background-color: @disabledBackground;
            }
        }
    }

    input:disabled {
        & ~ .check {
            &::after {
                background-color: @disabledBackground;
            }
        }
    }

    &:focus, &:active {
        input:not(:disabled) {
            & ~ .check {
                .halo();
            }
        }
    }
}

.checkbox {
    .check {
        &::before {
            position: absolute;
            vertical-align: middle;
            color: transparent;
            font-size: 0;
            content: "";
            height: .375rem;
            width: .625rem;
            background-color: @transparent;
            border-left: 2px solid;
            border-bottom: 2px solid;
            border-color: @dark;
            left: 50%;
            top: 50%;
            margin-left: -.3125rem;
            margin-top: -.3125rem;
            display: block;
            transform: rotate(-45deg);
        }
    }

    input:indeterminate ~ .check {
        &::before {
            display: block!important;
            height: .625rem;
            background-color: @dark;
            border: none;
            transform: rotate(0deg);
        }
    }

    input:not(:checked) {
        & ~ .check {
            &::before {
                transition: @transition-base;
                display: none;
            }
        }
    }
}

.radio {
    .check {
        background-color: transparent !important;
        border-radius: 50%;
        &::before {
            display: none;
            content: "";
            color: @checkBackground;
            background-color: @dark;
            .circle(.75, rem);
            .px2rem(margin-left, 2px);
            .px2rem(margin-top, 2px);
        }
    }

    input:checked ~ .check {
        &::before {
            display: block;
        }
    }

    input:disabled:checked {
        & ~ .check {
            &::before {
                color: @disabledColor;
                background-color: @disabledBackground;
            }
        }
    }
}

.switch {
    .caption {
        margin: 0 5px;
    }

    .check {
        position: relative;
        height: 1.125rem;
        width: 2.8125rem;
        outline: 2px #a6a6a6 solid;
        border: 1px #fff solid;
        cursor: pointer;
        background: #A6A6A6;
        z-index: 1;
        display: inline-block;
        vertical-align: middle;
    }

    .check:after {
        position: absolute;
        left: 0;
        top: -1px;
        display: block;
        content: "";
        height: 1.125rem;
        width: .5625rem;
        outline: 2px #333 solid;
        border: 1px #333 solid;
        cursor: pointer;
        background: #333;
        z-index: 2;
        transition: @transition-base;
    }

    input[type="checkbox"]:focus ~ .check {
        outline: 1px @lightGray dotted ;
    }

    input[type="checkbox"]:checked ~ .check {
        background: #008287;
        &:after {
            left: auto;
            transform: translateX(2.25rem);
            transition: @transition-base;
        }
    }

    input[type="checkbox"]:disabled ~ .check {
        background-color: @disabledBackground;
        border-color: @white;
        outline-color: @light;
        &:after {
            background-color: darken(@disabledBackground, 10%);
            outline-color: @disabledBackground;
            border-color: @disabledBackground;
        }
    }
}
