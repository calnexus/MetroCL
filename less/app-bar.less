@import (once) "include/vars";
@import (once) "include/mixins";

.app-bar {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    z-index: @zindex-top;
    .clear();
}

.app-bar {

    .app-bar-container {
        background-color: inherit;
        color: inherit;
    }

    .brand, .app-bar-menu {
        float: none;
    }

    .brand {
        display: block;
        position: relative;
        height: 55px;
        line-height: 55px;
        padding: 0 16px;
        background-color: inherit;
        color: inherit;
        text-decoration: none;
        font-size: 14px;
        flex-shrink: 0;
    }

    .app-bar-menu {
        .reset-list();
        width: 100%;
        display: flex;
        flex-wrap: nowrap;
        flex-direction: column;
        flex-shrink: 0;
    }

    .app-bar-menu {
        li, a {
            display: block;
            height: 100%;
            line-height: 55px;
            background-color: inherit;
            color: inherit;
            flex-shrink: 0;
        }

        a {
            padding: 0 16px;
            text-decoration: none;
            font-size: 14px;
        }
    }

    .brand:not(.no-hover), .app-bar-menu li {
        &:hover, &:active, .active {
            background: @hoverBackground;
        }
    }
}

.app-bar-expand() {

    flex-wrap: nowrap;

    .brand, .app-bar-menu {
        float: left;
    }

    .app-bar-menu {
        width: auto;
        flex-direction: row;
    }
}

.generate-app-bar-media-options(@mediaBreakpointListMobileLength);
.generate-app-bar-media-options(@name, @i: 1) when (@i <= @mediaBreakpointListMobileLength) {
    @m: extract(@mediaBreakpointListMobile, @i);

    @media screen and (min-width: @@m) {
        .app-bar {
            &.app-bar-expand-@{m} {
                .app-bar-expand();
            }
        }
    }

    .generate-app-bar-media-options(@name, @i + 1);
}