@import (once) "include/vars";
@import (once) "include/mixins";

.tiles-group {
    display: block;
    .clear();
}

.tiles-group {
    .create-tiles-group-size(@i: 1, @k: 1) when (@k <= @i) {
            &.size-@{k} {
                width: (@tileCellSize + @tileMargin * 2) * @k;
            }

        .create-tiles-group-size(@i; @k + 1);
    }
    .create-tiles-group-size(10);
}

[class*=tile-] {
    display: block;
    float: left;
    margin: @tileMargin;
    background-color: @cyan;
    color: @white;
    width: extract(@tileMedium, 1);
    height: extract(@tileMedium, 2);
    box-shadow: inset 0 0 1px #FFFFCC;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    user-select: none;
}

.tile {
    &-small {
        width: extract(@tileSmall, 1);
        height: extract(@tileSmall, 2);
    }
    &-medium {
        width: extract(@tileMedium, 1);
        height: extract(@tileMedium, 2);
    }
    &-wide {
        width: extract(@tileWide, 1);
        height: extract(@tileWide, 2);
    }
    &-large {
        width: extract(@tileLarge, 1);
        height: extract(@tileLarge, 2);
    }
    &-app {
        width: extract(@tileApp, 1);
        height: extract(@tileApp, 2);
    }
}

[class*=tile-] {
    &.group {
        background-color: transparent;
        box-shadow: none;
        cursor: default;
    }
}

.tile-medium.group {
    .tile-small:nth-child(1) {
        margin-top: 0;
        margin-left: 0;
    }

    .tile-small:nth-child(2) {
        margin-top: 0;
        margin-right: 0;
    }

    .tile-small:nth-child(3) {
        margin-bottom: 0;
        margin-left: 0;
    }

    .tile-small:nth-child(4) {
        margin-bottom: 0;
        margin-right: 0;
    }

    .tile-medium, .tile-wide, .tile-large {
        display: none;
    }
    .tile-medium:nth-child(1):last-child {
        margin: 0;
    }
}

.tile-large.group {
    [class*=tile-]:nth-child(1) {
        margin-left: 0;
        margin-top: 0;
    }

    .tile-medium:nth-child(1) + .tile-medium {
        margin-top: 0;
        margin-right: 0;
    }

    .tile-wide:nth-child(2), .tile-wide:nth-child(3):last-child {
        margin-bottom: 0;
        margin-left: 0;
    }

    .tile-wide:nth-child(1) + .tile-medium {
        margin-bottom: 0;
        margin-left: 0;
    }

    .tile-wide:nth-child(1) ~ .tile-medium:nth-child(3) {
        margin-bottom: 0;
        margin-right: 0;
        margin-top: @tileMargin;
    }

    .tile-medium:nth-child(3):not(:last-child) {
        margin-left: 0;
        margin-bottom: 0;
        margin-top: @tileMargin;
    }

    .tile-medium:nth-child(4):last-child {
        margin: @tileMargin 0 0 @tileMargin;
    }

    .tile-large {
        display: none;
    }
    .tile-large:nth-child(1):last-child {
        margin: 0;
    }
}

[class*=tile-] {

    .icon {
        max-width: 33%;
        height: 33%;
        position: absolute;
        top: 50%;
        left: 50%;
        .translateY(-50%);
        .translateX(-50%);
        font-size: 50px;
        line-height: 50px;
    }

    .branding-bar {
        height: 32px;
        line-height: 32px;
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        padding: 0 10px 5px;
        font-size: .875rem;
        font-weight: 500;
        .text-ellipsis();
    }

    .badge-top, .badge-bottom {
        position: absolute;
        display: block;
        padding: 4px 8px;
        font-size: 12px;
        text-align: center;
    }

    .badge-bottom {
        right: 10px;
        bottom: 0;
    }

    .badge-top {
        top: 10px;
        right: 10px;
    }

    &:hover {
        outline: @tileOutlineColor solid 4px;
    }
}

.tile {
    &-small {
        .icon {
            max-width: 50%;
            height: 50%;
            font-size: 35px;
            line-height: 35px;
        }
    }
    &-large {
        .icon {
            font-size: 102px;
            line-height: 102px;
        }
    }
    &-app {
        .icon {
            max-width: 75%;
            height: 75%;
        }
    }
}

[class*=tile-] {
    &.transform-right {
        .transformOrigin(left 50%);
        .perspective(@tileTransformPerspective);
        .rotateY(@tileTransformRotate);

        &.tile-small {
            .perspective(@tileTransformPerspective);
            .rotateY(@tileTransformRotate * 2);
        }

        &.tile-wide {
            .perspective(@tileTransformPerspective);
            .rotateY(@tileTransformRotate / 2);
        }

        &.tile-large {
            .perspective(@tileTransformPerspective);
            .rotateY(@tileTransformRotate / 3);
        }
    }

    &.transform-left {
        .transformOrigin(right 50%);
        .perspective(@tileTransformPerspective);
        .rotateY(-@tileTransformRotate);

        &.tile-small {
            .perspective(@tileTransformPerspective);
            .rotateY(-@tileTransformRotate * 2);
        }

        &.tile-wide {
            .perspective(@tileTransformPerspective);
            .rotateY(-@tileTransformRotate / 2);
        }

        &.tile-large {
            .perspective(@tileTransformPerspective);
            .rotateY(-@tileTransformRotate / 3);
        }
    }

    &.transform-top {
        .transformOrigin(50% bottom);
        .perspective(@tileTransformPerspective);
        .rotateX(@tileTransformRotate);

        &.tile-small {
            .perspective(@tileTransformPerspective);
            .rotateX(@tileTransformRotate * 2);
        }

        &.tile-wide {
            .perspective(@tileTransformPerspective);
            .rotateX(@tileTransformRotate / 2);
        }

        &.tile-large {
            .perspective(@tileTransformPerspective);
            .rotateX(@tileTransformRotate / 3);
        }
    }

    &.transform-bottom {
        .transformOrigin(50% top);
        .perspective(@tileTransformPerspective);
        .rotateX(-@tileTransformRotate);

        &.tile-small {
            .perspective(@tileTransformPerspective);
            .rotateX(-@tileTransformRotate * 2);
        }

        &.tile-wide {
            .perspective(@tileTransformPerspective);
            .rotateX(-@tileTransformRotate / 2);
        }

        &.tile-large {
            .perspective(@tileTransformPerspective);
            .rotateX(-@tileTransformRotate / 3);
        }
    }
}