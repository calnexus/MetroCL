@import (once) "include/vars";
@import (once) "include/mixins";

.clear, .clear-float, .clear-fix, .clearfix {
    .clear()
}

.place-right, .float-right {float: right !important;}
.place-left, .float-left {float: left !important;}
.place-none, .float-none, .no-float {float: none !important;}

.pos-relative {position: relative!important;}
.pos-absolute {position: absolute!important;}
.pos-static {position: static!important;}
.pos-fixed {position: fixed!important;}

.visible {visibility: visible !important;}
.no-visible {visibility: hidden !important;}
.overflow {overflow: auto !important;}
.no-overflow {overflow: hidden !important;}
.scroll {overflow: scroll !important;}
.scroll-x {overflow-x: auto !important;}
.scroll-y {overflow-y: auto !important;}
.no-scroll {overflow: hidden !important;}
.no-scroll-x {overflow-x: hidden !important;}
.no-scroll-y {overflow-y: hidden !important;}
.wrap {white-space: normal !important;}
.no-wrap {white-space: nowrap !important;}
.no-border {border: 0 !important;}
.no-border-left {border-left: none !important;}
.no-border-right {border-right: none !important;}
.no-border-top {border-top: none !important;}
.no-border-bottom {border-bottom: none !important;}
.no-border-visible {border-color: transparent !important;}
.no-user-select {user-select: none !important;}
.no-appearance {appearance: none !important;}

.mx-auto {
    margin-left: auto!important;
    margin-right: auto!important;
}

.ml-auto {margin-left: auto!important;}
.mr-auto {margin-right: auto!important;}

.generate-padding-and-margin(@i, @k: 1) when (@k =< @i) {
    .p-@{k} {padding: unit(@k * 8 / 16, rem) !important;}
    .pr-@{k} {padding-right: unit(@k * 8 / 16, rem) !important;}
    .pl-@{k} {padding-left: unit(@k * 8 / 16, rem) !important;}
    .pt-@{k} {padding-top: unit(@k * 8 / 16, rem) !important;}
    .pb-@{k} {padding-bottom: unit(@k * 8 / 16, rem) !important;}
    .m-@{k} {margin: unit(@k * 8 / 16, rem) !important;}
    .mr-@{k} {margin-right: unit(@k * 8 / 16, rem) !important;}
    .ml-@{k} {margin-left: unit(@k * 8 / 16, rem) !important;}
    .mt-@{k} {margin-top: unit(@k * 8 / 16, rem) !important;}
    .mb-@{k} {margin-bottom: unit(@k * 8 / 16, rem) !important;}

    .generate-padding-and-margin(@i, @k + 1);
}
.generate-padding-and-margin(10);

.p-0 {padding: 0!important;}
.pl-0 {padding-left: 0!important;}
.pr-0 {padding-right: 0!important;}
.pt-0 {padding-top: 0!important;}
.pb-0 {padding-bottom: 0!important;}
.m-0 {margin: 0!important;}
.ml-0 {margin-left: 0!important;}
.mr-0 {margin-right: 0!important;}
.mt-0 {margin-top: 0!important;}
.mb-0 {margin-bottom: 0!important;}

.border {border: 1px solid @transparent;}
.border-left {border-left: 1px solid @transparent;}
.border-right {border-right: 1px solid @transparent;}
.border-top {border-top: 1px solid @transparent;}
.border-bottom {border-bottom: 1px solid @transparent;}
.border-radius {.px2rem(border-radius, 4px);}
.border-radius-half {border-radius: 50%;}

.generate-border-width(10);
.generate-border-width(@i) when (@i > 0) {

    .border-@{i} {border-width: unit(@i / 16, rem);}

    .generate-border-width(@i - 1);
}

.rounded {
    border-radius: .25rem !important;
}

.generate-width(4);
.generate-width(@i) when (@i > 0) {

    @s: @i * 25;

    .w-@{s} {width: @i * 25 + 0% !important;}
    .h-@{s} {height: @i * 25 + 0% !important;}

    .generate-width(@i - 1);
}


.fixed-top, .fixed-bottom {
    position: fixed;
    left: 0;
    right: 0;
}

.fixed-top {
    top: 0;
}

.fixed-bottom {
    bottom: 0;
}

.d-none {display: none!important;}
.d-block {display: block!important;}
.d-inline {display: inline!important;}
.d-inline-block {display: inline-block!important;}
.d-table {display: table!important;}
.d-table-row {display: table-row!important;}
.d-table-cell {display: table-cell!important;}

.w-sxd {width: 320px;}
.w-smd {width: 480px;}
.w-ldd {width: 640px;}
.w-mdd {width: 768px;}
.w-lgd {width: 1024px;}
.w-xld {width: 1200px;}
.w-xxld {width: 1440px;}
.w-auto {width: auto!important;}

.selected {
    border: 4px @lightBlue solid;

    &:after {
        position: absolute;
        display: block;
        border-top: 28px solid @lightBlue;
        border-left: 28px solid transparent;
        right: 0;
        content:"";
        top: 0;
        z-index: 101;
    }

    &:before {
        position: absolute;
        display: block;
        content: "";
        background-color: transparent;
        border-color: @white!important;
        border-left: 2px solid;
        border-bottom: 2px solid;
        height: .325rem;
        width: .5rem;
        right: .25rem;
        top: .25rem;
        z-index: 102;
        transform: rotate(-45deg);
    }
}

// Utils media

.generate-utils-media-options(@mediaBreakpointListMobileLength);
.generate-utils-media-options(@name, @i: 1) when (@i <= @mediaBreakpointListMobileLength) {
    @m: extract(@mediaBreakpointListMobile, @i);

    @media screen and (min-width: @@m) {
        .visible-@{m} {visibility: visible !important;}
        .no-visible-@{m} {visibility: hidden !important;}
        .overflow-@{m} {overflow: auto !important;}
        .no-overflow-@{m} {overflow: hidden !important;}
        .scroll-@{m} {overflow: scroll !important;}
        .scroll-x-@{m} {overflow-x: auto !important;}
        .scroll-y-@{m} {overflow-y: auto !important;}
        .no-scroll-@{m} {overflow: hidden !important;}
        .no-scroll-x-@{m} {overflow-x: hidden !important;}
        .no-scroll-y-@{m}{overflow-y: hidden !important;}
        .wrap-@{m} {white-space: normal !important;}
        .no-wrap-@{m} {white-space: nowrap !important;}

        .d-none-@{m} {display: none!important;}
        .d-block-@{m} {display: block!important;}
        .d-inline-@{m} {display: inline!important;}
        .d-inline-block-@{m} {display: inline-block!important;}
        .d-table-@{m} {display: table!important;}
        .d-table-row-@{m} {display: table-row!important;}
        .d-table-cell-@{m} {display: table-cell!important;}

        .place-left-@{m} {float: left!important;}
        .place-right-@{m} {float: right!important;}
        .place-none-@{m} {float: none!important;}
        .float-left-@{m} {float: left!important;}
        .float-right-@{m} {float: right!important;}
        .float-none-@{m} {float: none!important;}

        .pos-relative-@{m} {position: relative!important;}
        .pos-absolute-@{m} {position: absolute!important;}
        .pos-static-@{m} {position: static!important;}
        .pos-fixed-@{m} {position: fixed!important;}

        .w-auto-@{m} {width: auto!important;}

        .mx-auto-@{m} {
            margin-left: auto!important;
            margin-right: auto!important;
        }

        .ml-auto-@{m} {margin-left: auto!important;}
        .mr-auto-@{m} {margin-right: auto!important;}

        .p-0-@{m} {padding: 0!important;}
        .pl-0-@{m} {padding-left: 0!important;}
        .pr-0-@{m} {padding-right: 0!important;}
        .pt-0-@{m} {padding-top: 0!important;}
        .pb-0-@{m} {padding-bottom: 0!important;}
        .m-0-@{m} {margin: 0!important;}
        .ml-0-@{m} {margin-left: 0!important;}
        .mr-0-@{m} {margin-right: 0!important;}
        .mt-0-@{m} {margin-top: 0!important;}
        .mb-0-@{m} {margin-bottom: 0!important;}

        .generate-media-padding(@j, @k: 0) when (@k =< @j) {
            .p-@{m}-@{k} {padding: unit(@k * 8 / 16, rem) !important;}
            .pr-@{m}-@{k} {padding-right: unit(@k * 8 / 16, rem) !important;}
            .pl-@{m}-@{k} {padding-left: unit(@k * 8 / 16, rem) !important;}
            .pt-@{m}-@{k} {padding-top: unit(@k * 8 / 16, rem) !important;}
            .pb-@{m}-@{k} {padding-bottom: unit(@k * 8 / 16, rem) !important;}
            .m-@{m}-@{k} {margin: unit(@k * 8 / 16, rem) !important;}
            .mr-@{m}-@{k} {margin-right: unit(@k * 8 / 16, rem) !important;}
            .ml-@{m}-@{k} {margin-left: unit(@k * 8 / 16, rem) !important;}
            .mt-@{m}-@{k} {margin-top: unit(@k * 8 / 16, rem) !important;}
            .mb-@{m}-@{k} {margin-bottom: unit(@k * 8 / 16, rem) !important;}

            .generate-media-padding(@j, (@k + 1));
        }
        .generate-media-padding(10);


        .generate-width(4);
        .generate-width(@i) when (@i > 0) {

            @s: @i * 25;

            .w-@{s}-@{m} {width: @i * 25 + 0% !important;}
            .h-@{s}-@{m} {height: @i * 25 + 0% !important;}

            .generate-width(@i - 1);
        }
    }

    .generate-utils-media-options(@name, @i + 1);
}
